{"version":3,"sources":["../../src/gestures/index.js"],"names":[],"mappings":";;;;;;;;;;;;+BAIoB,mBAAmB;;;;uBACxB,SAAS;;;;sBAEM,UAAU;;;;;;AAMxC,IAAM,sBAAsB,GAAG,CAC7B,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAC1E,CAAC;;;;;;AAMK,IAAM,YAAY,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;;AAClE,IAAM,WAAW,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;;AAChE,IAAM,UAAU,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAC9D,IAAM,aAAa,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;;AACpE,IAAM,OAAO,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;;AACxD,IAAM,WAAW,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;;AAChE,IAAM,aAAa,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;;AACpE,IAAM,WAAW,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;;AAChE,IAAM,cAAc,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;;AACtE,IAAM,aAAa,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;;AACpE,IAAM,aAAa,GAAG,qBAAG,SAAS,CAAC,kCAAQ,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;;;;;;;AAM3E,SAAS,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE;AACvC,MAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACzC,QAAI,EAAE,CAAC,SAAS,CAAC,cAAc,EAAE;AAC/B,QAAE,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;KAC/B;GACF;;AAED,wBAAc,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;;AAExC,WAAS,SAAS,CAAC,IAAI,EAAE;AACvB,QAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACtB,gBAAU,CAAC,IAAI,CAAC,CAAC;KAClB;GACF;CACF","file":"index.js","sourcesContent":["/**\n * Module dependencies\n */\n\nimport partial from 'ramda/src/partial';\nimport hg from 'mercury';\n\nimport { handleGesture } from './events';\n\n/**\n *\n */\n\nconst PREVENT_DEFUALT_EVENTS = [\n  'longtap', 'swipeup', 'swiperight', 'swipedown', 'swipeleft', 'touchmove',\n];\n\n/**\n *\n */\n\nexport const sendTapStart = hg.BaseEvent(partial(sendEvent, 'tapstart'));\nexport const sendTapMove = hg.BaseEvent(partial(sendEvent, 'tapmove'));\nexport const sendTapEnd = hg.BaseEvent(partial(sendEvent, 'tapend'));\nexport const sendTapCancel = hg.BaseEvent(partial(sendEvent, 'tapcancel'));\nexport const sendTap = hg.BaseEvent(partial(sendEvent, 'tap'));\nexport const sendLongTap = hg.BaseEvent(partial(sendEvent, 'longtap'));\nexport const sendDoubleTap = hg.BaseEvent(partial(sendEvent, 'doubletap'));\nexport const sendSwipeUp = hg.BaseEvent(partial(sendEvent, 'swipeup'));\nexport const sendSwipeRight = hg.BaseEvent(partial(sendEvent, 'swiperight'));\nexport const sendSwipeDown = hg.BaseEvent(partial(sendEvent, 'swipedown'));\nexport const sendSwipeLeft = hg.BaseEvent(partial(sendEvent, 'swipeleft'));\n\n/**\n *\n */\n\nfunction sendEvent(type, ev, _broadcast) {\n  if (~PREVENT_DEFUALT_EVENTS.indexOf(type)) {\n    if (ev._rawEvent.preventDefault) {\n      ev._rawEvent.preventDefault();\n    }\n  }\n\n  handleGesture.call(this, ev, broadcast);\n\n  function broadcast(data) {\n    if (data.type === type) {\n      _broadcast(data);\n    }\n  }\n}\n"]}