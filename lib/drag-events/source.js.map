{"version":3,"sources":["../../src/drag-events/source.js"],"names":[],"mappings":";;;;;;;;;;;;;;uBAIe,SAAS;;;;qBAEM,SAAS;;;;;;qBAMxB,qBAAG,SAAS,CAAC,UAAU,CAAC;;;;;;AAMvC,SAAS,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE;;AAEjC,MAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,OAAO;;AAE7B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACvB,MAAM,SAAS,GAAG,qBAAG,SAAS,EAAE,CAAC;AACjC,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;AACjC,MAAI,cAAc,GAAG,KAAK,CAAC;;AAE3B,MAAI,EAAE,CAAC,IAAI,KAAK,WAAW,EAAE;AAC3B,QAAM,gBAAgB,GAAG,CAAC,cAAc,CAAC;AACzC,gBAAY,EAAE,CAAC;AACf,QAAI,gBAAgB,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;GACrC;;;;AAID,WAAS,SAAS,CAAC,CAAC,EAAE;AACpB,QAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,OAAO;;AAErC,QAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;AAC9C,gBAAY,CAAC,aAAa,GAAG,MAAM,CAAC;;AAEpC,aAAS,CAAC,OAAO,CAAC;AAChB,UAAI,EAAE,WAAW;AACjB,YAAM,EAAE,CAAC,CAAC,MAAM;AAChB,kBAAY,EAAZ,YAAY;KACb,CAAC,CAAC,CAAC;GACL;;AAED,WAAS,OAAO,CAAC,CAAC,EAAE;AAClB,QAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,OAAO;;AAErC,mBAAe,EAAE,CAAC;;AAElB,aAAS,CAAC,OAAO,CAAC;AAChB,UAAI,EAAE,SAAS;AACf,YAAM,EAAE,CAAC,CAAC,MAAM;KACjB,CAAC,CAAC,CAAC;GACL;;AAED,WAAS,OAAO,CAAC,UAAU,EAAE;AAC3B,WAAO,eAAc,EAAE,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;GAC5C;;AAED,WAAS,oBAAoB,CAAC,CAAC,EAAE;AAC/B,WAAO,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC;GAC7B;;AAED,WAAS,YAAY,GAAG;AACtB,QAAI,cAAc,EAAE,OAAO;;AAE3B,aAAS,CAAC,sBAAsB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzD,aAAS,CAAC,sBAAsB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACrD,kBAAc,GAAG,IAAI,CAAC;GACvB;;AAED,WAAS,eAAe,GAAG;AACzB,QAAI,CAAC,cAAc,EAAE,OAAO;;AAE5B,aAAS,CAAC,yBAAyB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC5D,aAAS,CAAC,yBAAyB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,kBAAc,GAAG,KAAK,CAAC;GACxB;CACF;;;;;;AAMD,SAAS,WAAW,CAAC,EAAE,EAAE;AACvB,SAAO,CAAC,qBAAc,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;CACxC","file":"source.js","sourcesContent":["/**\n * Module dependencies\n */\n\nimport hg from 'mercury';\n\nimport { SOURCE_EVENTS } from './setup';\n\n/**\n *\n */\n\nexport default hg.BaseEvent(handleDrag);\n\n// TODO: Handle also \"drag\" event. First need to be able to specify\n// the events that we want to listent to, via `this.data`.\n// // If not specified listen to all `SOURCE_EVENTS`\n// TODO: Consider to move some functions to the outer scope\nfunction handleDrag(ev, broadcast) {\n  // Ignore other events\n  if (!isDragEvent(ev)) return;\n\n  const data = this.data;\n  const delegator = hg.Delegator();\n  const _target = ev.currentTarget;\n  let listenersAdded = false; // TODO: Check if can remove this\n\n  if (ev.type === 'dragstart') {\n    const triggerDragstart = !listenersAdded;\n    addListeners();\n    if (triggerDragstart) dragstart(ev);\n  }\n\n  // TODO: Check if can remove `target` from broadcasted data,\n  // from all/some handlers\n  function dragstart(e) {\n    if (!isRootElementOfEvent(e)) return;\n\n    const dataTransfer = e._rawEvent.dataTransfer;\n    dataTransfer.effectAllowed = 'move';\n\n    broadcast(addData({\n      type: 'dragstart',\n      target: e.target,\n      dataTransfer,\n    }));\n  }\n\n  function dragend(e) {\n    if (!isRootElementOfEvent(e)) return;\n\n    removeListeners();\n\n    broadcast(addData({\n      type: 'dragend',\n      target: e.target,\n    }));\n  }\n\n  function addData(additional) {\n    return Object.assign({}, data, additional);\n  }\n\n  function isRootElementOfEvent(e) {\n    return e.target === _target;\n  }\n\n  function addListeners() {\n    if (listenersAdded) return;\n\n    delegator.addGlobalEventListener('dragstart', dragstart);\n    delegator.addGlobalEventListener('dragend', dragend);\n    listenersAdded = true;\n  }\n\n  function removeListeners() {\n    if (!listenersAdded) return;\n\n    delegator.removeGlobalEventListener('dragstart', dragstart);\n    delegator.removeGlobalEventListener('dragend', dragend);\n    listenersAdded = false;\n  }\n}\n\n/**\n *\n */\n\nfunction isDragEvent(ev) {\n  return ~SOURCE_EVENTS.indexOf(ev.type);\n}\n"]}