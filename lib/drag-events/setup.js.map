{"version":3,"sources":["../../src/drag-events/setup.js"],"names":[],"mappings":";;;;;;;;;;;;uBAIe,SAAS;;;;;;;;AAMjB,IAAM,aAAa,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;;AACvD,IAAM,aAAa,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;;AACrE,IAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;;;;;;;qBAM3C,YAAqB;MAAX,IAAI,yDAAG,EAAE;;AAChC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAE3B,MAAM,SAAS,GAAG,qBAAG,SAAS,EAAE,CAAC;;AAEjC,SAAO,EAAE,QAAQ,EAAR,QAAQ,EAAE,UAAU,EAAV,UAAU,EAAE,CAAC;;AAEhC,WAAS,QAAQ,GAAG;AAClB,UAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;GAC3B;;AAED,WAAS,UAAU,GAAG;AACpB,UAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;GAC7B;;AAED,WAAS,SAAS,CAAC,IAAI,EAAE;AACvB,QAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO;AAClC,aAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;GAC1B;;AAED,WAAS,WAAW,CAAC,IAAI,EAAE;AACzB,QAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO;AAClC,aAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;GAC5B;;AAED,WAAS,cAAc,CAAC,IAAI,EAAE;AAC5B,QAAI,MAAM,IAAI,EAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpC,aAAO,KAAK,CAAC;KACd;;AAED,QAAI,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;;AAEvB,QAAI,IAAI,EAAE;AACR,UAAI,IAAI,KAAK,QAAQ,IAAI,EAAC,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtD,eAAO,KAAK,CAAC;OACd;;AAED,UAAI,IAAI,KAAK,QAAQ,IAAI,EAAC,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtD,eAAO,KAAK,CAAC;OACd;KACF;;AAED,WAAO,IAAI,CAAC;GACb;CACF","file":"setup.js","sourcesContent":["/**\n * Module dependencies\n */\n\nimport hg from 'mercury';\n\n/**\n * Drag events\n */\n\nexport const SOURCE_EVENTS = ['dragstart', 'drag', 'dragend'];\nexport const TARGET_EVENTS = ['dragenter', 'dragover', 'dragleave', 'drop'];\nexport const EVENTS = SOURCE_EVENTS.concat(TARGET_EVENTS);\n\n/**\n *\n */\n\nexport default function (opts = {}) {\n  const mode = opts.mode;\n  const events = opts.events;\n\n  const delegator = hg.Delegator();\n\n  return { listenTo, unlistenTo };\n\n  function listenTo() {\n    EVENTS.forEach(_listenTo);\n  }\n\n  function unlistenTo() {\n    EVENTS.forEach(_unlistenTo);\n  }\n\n  function _listenTo(name) {\n    if (!isEventEnabled(name)) return;\n    delegator.listenTo(name);\n  }\n\n  function _unlistenTo(name) {\n    if (!isEventEnabled(name)) return;\n    delegator.unlistenTo(name);\n  }\n\n  function isEventEnabled(name) {\n    if (events && !~events.indexOf(name)) {\n      return false;\n    }\n\n    if (!mode) return true;\n\n    if (mode) {\n      if (mode === 'source' && !~SOURCE_EVENTS.indexOf(name)) {\n        return false;\n      }\n\n      if (mode === 'target' && !~TARGET_EVENTS.indexOf(name)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n"]}