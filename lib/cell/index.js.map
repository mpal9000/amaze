{"version":3,"sources":["../../src/cell/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Module dependencies\n */\n\nimport hg, { h } from 'mercury';\nimport _memoize from 'memoizee';\nimport partialRight from 'ramda/src/partialRight';\nimport _props from 'ramda/src/props';\n\nimport { sendTap } from '../gestures';\nimport dragTargetEvents from '../drag-events/target';\nimport Tile from '../tile';\n\nconst memoize = partialRight(_memoize, { max: 1 });\n\n/**\n * Component\n */\n\nexport default function Cell(columns, index, onAddBot) {\n  const row = Math.floor(index / columns);\n  const col = index - row * columns;\n\n  const state = hg.state({\n    columns: hg.value(columns),\n    index: hg.value(index),\n    row: hg.value(row),\n    col: hg.value(col),\n    isActive: hg.value(false),\n    isEntry: hg.value(false),\n    isExit: hg.value(false),\n    isEnabled: hg.value(isEnabled),\n    isDragHovered: hg.value(false),\n    onDrop: hg.value(onDrop),\n    addBot: hg.value(addBot),\n    channels: { onTap, onDrag },\n  });\n\n  function isEnabled() {\n    return state.isActive()\n      || state.isEntry()\n      || state.isExit();\n  }\n\n  function addBot(botIdentity) {\n    // TODO: Check if it's better to not store `row` and `col`,\n    // inside `Bot` instance\n    onAddBot(Object.assign({}, botIdentity, { index, row, col }));\n  }\n\n  return state;\n}\n\n/**\n * Render component.\n */\n\nconst cellStyle = memoize((columns, col, width, margin = 0) => {\n  return  {\n    width: `${width}%`,\n    'padding-bottom': `${width}%`,\n    margin: `${margin}%`,\n    clear: col == 0\n      ? 'left'\n      : col == columns - 1\n         ? 'right'\n         : 'none', // TODO: Consider to not assign `clear: 'none'`\n  };\n});\n\nconst tileProps = memoize((isActive, isEntry, isExit, isDragHovered, botIndicators) => {\n  return { isActive, isEntry, isExit, isDragHovered, botIndicators };\n});\n\nCell.render = function render(state, props, botIndicators) {\n  const { isEntry, channels } = state;\n\n  const surfaceProps = props.isStarted ? {} : !isEntry\n    ? {\n      'ev-event': [\n        sendTap(channels.onTap, { botIndicators }),\n        sendTap(props.checkReadyState),\n      ],\n    }\n    : {\n      'ev-event': [\n        sendTap(channels.onTap, { botIndicators }),\n        dragTargetEvents(channels.onDrag),\n        sendTap(props.checkReadyState),\n      ],\n    };\n\n  return h(\n    '.amaze-Cell',\n    {\n      style: cellStyle(\n        ..._props(['columns', 'col'], state),\n        ..._props(['width', 'margin'], props)\n      ),\n    },\n    [\n      hg.partial(Tile.render, tileProps(..._props([\n        'isActive', 'isEntry', 'isExit', 'isDragHovered',\n      ], state), botIndicators)),\n\n      h('.amaze-Cell-surface', surfaceProps),\n    ]\n  );\n}\n\n/**\n *\n */\n\nfunction onTap(state, { botIndicators }) {\n  // TODO: Consider to rename `snapshot`\n  const snapshot = state();\n\n  if (botIndicators.length) return;\n\n  if (!snapshot.isActive) {\n    state.isActive.set(true);\n  }\n\n  else if (snapshot.isExit) {\n    state.set(Object.assign({}, snapshot, { isExit: false, isActive: false }));\n  }\n\n  else if (snapshot.isEntry) {\n    state.set(Object.assign({}, snapshot, { isEntry: false, isExit: true }));\n  }\n\n  else {\n    state.isEntry.set(true);\n  }\n}\n\n/**\n *\n */\n\nfunction onDrag(state, data) {\n  switch (data.type) {\n    case 'dragenter': return onDragenter(state, data);\n    // case 'dragover': return onDragover(state, data);\n    case 'dragleave': return onDragleave(state, data);\n    case 'drop': return onDrop(state, data);\n    // no default\n  }\n}\n\n/**\n *\n */\n\nfunction onDragenter(state) {\n  state.isDragHovered.set(true);\n}\n\n/**\n *\n */\n\nfunction onDragleave(state) {\n  state.isDragHovered.set(false);\n}\n\n/**\n *\n */\n\nfunction onDrop(state, data) {\n  state.isDragHovered.set(false);\n\n  const botIdentity = JSON.parse(data.dataTransfer.getData('text/plain'));\n  const addBot = state.addBot();\n\n  addBot(botIdentity);\n}\n"]}