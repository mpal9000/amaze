{"version":3,"sources":["../../src/button/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;qBAawB,MAAM;;uBATR,SAAS;;;;0BAChB,YAAY;;;;wBAE6B,aAAa;;;;;;AAMtD,SAAS,MAAM,GAAG;AAC/B,SAAO,qBAAG,KAAK,CAAC;AACd,YAAQ,EAAE,qBAAG,KAAK,CAAC,KAAK,CAAC;AACzB,YAAQ,EAAE,EAAE,UAAU,EAAV,UAAU,EAAE,QAAQ,EAAR,QAAQ,EAAE,WAAW,EAAX,WAAW,EAAE;GAChD,CAAC,CAAC;CACJ;;;;;;AAMD,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAc;MAAZ,KAAK,yDAAG,EAAE;MAE/B,OAAO,GAMnB,KAAK,CANN,UAAU;MACG,OAAO,GAKnB,KAAK,CALN,UAAU;MACX,QAAQ,GAIN,KAAK,CAJP,QAAQ;MACR,SAAS,GAGP,KAAK,CAHP,SAAS;MACT,QAAQ,GAEN,KAAK,CAFP,QAAQ;;MACL,IAAI,4BACL,KAAK,GANN,UAAU,EACV,UAAU;;AAOb,MAAM,eAAe,GAAG,CACtB,4BAAa,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EACvC,0BAAW,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACnC,6BAAc,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAC1C,CAAC;;AAEF,MAAM,QAAQ,GAAG,eAAe,CAAC,MAAM,CACrC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAC5D,CAAC;;AAEF,SAAO,gBACL,qBAAqB,EACrB;AAEI,QAAI,EAAE,QAAQ;KACX,IAAI;AACP,aAAS,EAAE,6BACT,KAAK,CAAC,QAAQ,IAAI,sBAAsB,EACxC,SAAS,CACV;MAEH,OAAO,GACH,EAAE,UAAU,EAAE,OAAO,EAAE,GACvB,EAAE,UAAU,EAAE,QAAQ,EAAE,CAC7B,EACD,QAAQ,CACT,CAAC;CACH,CAAA;;;;;;AAMD,SAAS,UAAU,CAAC,KAAK,EAAE;AACzB,OAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CAC1B;;;;;;AAMD,SAAS,QAAQ,CAAC,KAAK,EAAE;AACvB,OAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;CAC3B;;;;;;AAMD,SAAS,WAAW,CAAC,KAAK,EAAE;AAC1B,OAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;CAC3B","file":"index.js","sourcesContent":["/**\n * Module dependencies\n */\n\nimport hg, { h } from 'mercury';\nimport cx from 'classnames';\n\nimport { sendTapStart, sendTapEnd, sendTapCancel } from '../gestures';\n\n/**\n * Component\n */\n\nexport default function Button() {\n  return hg.state({\n    isActive: hg.value(false),\n    channels: { onTapStart, onTapEnd, onTapCancel },\n  });\n}\n\n/**\n * Render component.\n */\n\nButton.render = function render(state, props = {}) {\n  const {\n    ['ev-event']: evEvent,\n    ['ev-click']: evClick,\n    isTapped,\n    className,\n    children,\n    ...rest,\n  } = props;\n\n  const defaultHandlers = [\n    sendTapStart(state.channels.onTapStart),\n    sendTapEnd(state.channels.onTapEnd),\n    sendTapCancel(state.channels.onTapCancel),\n  ];\n\n  const handlers = defaultHandlers.concat(\n    evEvent ? Array.isArray(evEvent) ? evEvent : [evEvent] : []\n  );\n\n  return h(\n    'button.amaze-Button',\n    Object.assign(\n      {\n        type: 'button',\n        ...rest,\n        className: cx(\n          state.isActive && 'amaze-Button--active',\n          className\n        ),\n      },\n      evClick\n        ? { 'ev-click': evClick }\n        : { 'ev-event': handlers }\n    ),\n    children\n  );\n}\n\n/**\n *\n */\n\nfunction onTapStart(state) {\n  state.isActive.set(true);\n}\n\n/**\n *\n */\n\nfunction onTapEnd(state) {\n  state.isActive.set(false);\n}\n\n/**\n *\n */\n\nfunction onTapCancel(state) {\n  state.isActive.set(false);\n}\n"]}