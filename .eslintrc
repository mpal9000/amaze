{
  "parser": "babel-eslint",

  "ecmaFeatures": {
    "arrowFunctions": true,
    "binaryLiterals": true,
    "blockBindings": true,
    "classes": true,
    "defaultParams": true,
    "destructuring": true,
    "forOf": true,
    "generators": true,
    "modules": true,
    "objectLiteralComputedProperties": true,
    "objectLiteralDuplicateProperties": false,
    "objectLiteralShorthandMethods": true,
    "objectLiteralShorthandProperties": true,
    "octalLiterals": true,
    "regexUFlag": true,
    "regexYFlag": true,
    "restParams": true,
    "spread": true,
    "superInFunctions": true,
    "templateStrings": true,
    "unicodeCodePointEscapes": true,
    "globalReturn": false,
    "jsx": true
  },

  "env": {
    "browser": true,
    "mocha": true,
    "node": true
  },

  "globals": {
    "__DEVELOPMENT__": false,
    "__PRODUCTION__": false,
    "__BROWSER__": false
  },

  "plugins": [
    "babel",
    // "filenames", // TODO: Fix this and enable it
    // "one-variable-per-var",
    //// "various-rules"
  ],

  "rules": {
    // Possible Errors
    // ===============

    "comma-dangle": [2, "always-multiline"],
    "no-console": 1,
    "no-extra-parens": 2,
    "no-unexpected-multiline": 1,
    "valid-jsdoc": [2, {
      "prefer": { "return": "return" },
      "requireReturn": true,
      "requireParamDescription": true
    }],


    // Best Practices
    // ==============

    "accessor-pairs": [2, { "getWithoutSet": false, "setWithoutGet": true }],
    // "block-scoped-var": 2,
    "complexity": [1, 10],
    "curly": [2, "multi-line"],
    "default-case": 2,
    "dot-location": [2, "property"],
    // "eqeqeq": [2, "smart"],
    "eqeqeq": 0,
    "guard-for-in": 2,
    "no-div-regex": 2,
    "no-else-return": 2,
    "no-floating-decimal": 2,
    "no-param-reassign": 2,
    "no-process-env": 2,
    "no-self-compare": 2,
    "no-throw-literal": 2,
    "no-void": 2,
    // "no-warning-comments": 1, //REF//
    "wrap-iife": [2, "outside"],
    "yoda": [2, "never", { "exceptRange": true }],


    // Strict Mode
    // ===========

    "strict": [2, "never"], // TODO: Ensure Babel prepends a `use strict;` staement


    // Variables
    // =========

    // "no-catch-shadow": 2, // TODO: Check if need this
    "no-undef": 2,
    "no-undefined": 2,
    "no-unused-vars": [2, { "vars": "all", "args": "after-used" }],
    // "no-use-before-define": [2, "nofunc"],


    // Node.js
    // =======

    // "handle-callback-err": [2, "^(err|error|.+Error)$"], //REF//
    "handle-callback-err": [2, "^.*(e|E)rr(or)?$"],
    "no-mixed-requires": [1, true],
    "no-new-require": 2,
    "no-path-concat": 2,
    "no-process-exit": 1,


    // Stylistic Issues
    // ================

    "array-bracket-spacing": [2, "never"],
    "brace-style": [1, "stroustrup", { "allowSingleLine": true }],
    "comma-style": [2, "last"],
    // "computed-property-spacing": [2, "never"], // TODO: Enable this after ensure that works correctly with object "rest" properties
    "consistent-this": [2, "self"],
    "func-names": 2,
    // "func-style": [2, "declaration"],
    "indent": [2, 2, { "SwitchCase": 1 }],
    "max-nested-callbacks": [1, 3],
    "new-cap": 0, // Overriden via "babel" plugin
    "no-lonely-if": 2,
    "no-multiple-empty-lines": [1, { "max": 2 }],
    "no-underscore-dangle": 0,
    "no-unneeded-ternary": 2,
    "object-curly-spacing": [2, "always"],
    "operator-assignment": [2, "always"],
    "operator-linebreak": [2, "before"],
    "padded-blocks": [2, "never"],
    "quote-props": [2, "as-needed"],
    // "quotes": [2, "single", "avoid-escape"], // TODO: Check if it's better
    "quotes": [2, "single"],
    "space-after-keywords": [2, "always"],
    "space-before-blocks": [2, "always"],
    "space-before-function-paren": [2, { "anonymous": "always", "named": "never" }],
    "space-in-parens": [2, "never"],
    "space-unary-ops": [2, { "words": true, "nonwords": false }],
    // "spaced-comment": [2, "always", { "exceptions": ["-", "="] }],


    // ECMAScript 6
    // ============

    "constructor-super": 2,
    // "generator-star-spacing": [2, { "before": true, "after": false }], // Overriden via "babel" plugin
    "no-this-before-super": 2,
    "no-var": 2,
    // "object-shorthand": [2, "always"], // Overriden via "babel" plugin
    "prefer-const": 2,


    // Legacy
    // ======

    "max-depth": [1, 4],
    // "max-len": [1, 90, 2], //REF//
    "max-params": [1, 5],
    "max-statements": [1, 20],


    // Plugins
    // =======

    // "babel/block-scoped-var": 2,
    "babel/block-scoped-var": 0,
    "babel/object-shorthand": [2, "always"],
    // // "babel/generator-star": [2, { "before": true, "after": false }], // deprecated in eslint
    "babel/generator-star-spacing": [2, { "before": true, "after": false }],
    // "babel/new-cap": 2, //REF//
    // // "babel/space-in-brackets": [2, "never", { "objectsInArrays": true, "objectsInObjects": true }], // deprecated in eslint

    //// "various-rules/no-timing-attacks": 2,
    //// "various-rules/no-unsafe-regex": 2,

    // "one-variable-per-var/one-variable-per-var": 2,

    // "filenames/filenames": [2, "^[a-z\\-]$"], // TODO: Fix this and enable it
  }
}
